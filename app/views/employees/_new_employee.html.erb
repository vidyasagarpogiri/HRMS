<div class="wrapper">
		<div class="container">
			<div class="row">	
				<div class="span12">
					<div class="content">
						<div class="module">
							<div class="module-head">
								<h3>Employee Details</h3>
							</div>
							
							<div class="module-body ">	
							  <%= form_for @employee, :data => {:toggle => "validator"}, :html => {:class=>"form-horizontal row-fluid"} do |f| %>															
                 <div class="control-group">
										<label class="control-label" for="basicinput">Employee Id</label>
										<div class="controls">
											 <%= f.text_field :employee_id, :class => "span8 form-control ", :placeholder =>"Enter Emp Id", :data => {:error => " Please Enter Employee Id"},:required =>true %>
											 <span class="help-block with-errors"></span>  
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Title</label>
										<div class="controls">									
                     <%= f.select :title, options_for_select([['Mr', 'Mr'], ['Mrs', 'Mrs'], ['Miss', 'Miss']]),{}, :class=> "span8 form-control",:data => {:error => " Please Select Title"}, :required =>true %>
                     <span class="help-block with-errors"></span>											 
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Employee First Name</label>
										<div class="controls">
                      <%= f.text_field :first_name,:class => "span8 form-control",  :placeholder=>"Enter First name",:data => {:error => " Please Enter Employee First Name"}, :required =>true, :pattern => '[a-zA-Z/s ]*' %>
											 <span class="help-block with-errors"></span>   
										</div>
									</div>
									
										<div class="control-group">
										<label class="control-label" for="basicinput">Employee Last Name</label>
										<div class="controls">
                      <%= f.text_field :last_name,:class => "span8", :id => "basicinput", :placeholder => "Enter Last name",:data => {:error => " Please Enter Employee Last Name"},:required =>true, :pattern => '[a-zA-Z/s ]*'  %> 
											 <span class="help-block with-errors"></span>   
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Date Of Joining</label>
										<div class="controls">
                     <%= text_field :employee, :date_of_join, :placeholder=>"Enter Date Of Joining",:class => "span8 date-picker form-control", :id => "basicinput_id",:placeholder => "Enter Joing date",:data => {:error => " Please Enter Employee Joing date"},:required =>true %> 
											 <span class="help-block with-errors"></span>   
										</div>
									</div>
									 <% a = []%>
                   <%  JobLocation.all.each do |j| 
                    b=[]
                    b << j.address.city 
                    b << j.id
                    a << b
                   end  %>                  
                   
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Job Location</label>
										<div class="controls">
                      <%= f.select :job_location_id, a,  { :prompt => "Please Select" }, { :class => "job_location, span8 form-control", :id => "disabledSelect" } %>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Blood Group</label>
										<div class="controls">
                       <%= f.collection_select :blood_group_id, BloodGroup.all, :id, :blood_group_name, { :prompt => "Please Select" }, { :class => "blood_group, span8 form-control", :id => "disabledSelect" } %> 
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Mobile Number</label>
										<div class="controls">
                      <%= f.text_field :mobile_number, :class => "span8 form-control", :id => "basicinput", :placeholder=>"Enter Mobile No",:data => {:error => " Please Enter Employee Mobile Number", :minlength => "10", :maxlength => "10"}, :required =>true, :type => "number" %> 

                      <span class="help-block with-errors"></span>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Email Id</label>
										<div class="controls">
                     <input class="span8 form-control" id ="basicinput" placeholder="Enter Email id" name="email" data-error =" Please Enter Valid Amzur Email Id" required  type = "email" pattern="[\w\.-]+@(amzur.com)"> 
                     <span class="help-block with-errors"></span> 
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Alternate E-Mail</label>
										<div class="controls">
                     <%= f.text_field :alternate_email, :class=>"span8 form-control", :placeholder=>"Enter Alternate Email",:data => {:error => " Please Enter Employee Alternate Email"}, :required =>true, :pattern => '^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$' %>
                     <span class="help-block with-errors"></span> 
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput"> Reporting Manager</label>
										<div class="controls">
                     <input type="text" id="reporting" class ="span8 form-control", name= "reporting" , place_holder = "Enter Reporting Manager Name" data-error="Please Enter Employee Reporting Manager" required>
                     <input type="hidden" id="reporting_id"  name= "reporting_id"> 
                     <span class="help-block with-errors"></span> 
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Father Name</label>
										<div class="controls">
                     <%= f.text_field :father_name, :class => "span8 form-control", :id =>"basicinput",  :placeholder=>"Enter Father name",:data => {:error => " Please Enter Employee Father Number"}, :required =>true, :pattern => '[a-zA-Z/s ]*' %> 
                     <span class="help-block with-errors"></span>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Gender</label>
										<div class="controls">
                     <%= f.select(:gender, options_for_select([['Male', 'Male'], ['Female', 'Female']]), {}, :class=> "span8 form-control", :id=>"disabledSelect") %>
                     <span class="help-block with-errors"></span>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Date Of Birth</label>                                             
										<div class="controls">
                     <%= f.text_field :date_of_birth, :placeholder=>"Enter Date Of Birth", :class=>"span8 datepicker_with_year form-control", :data => {:error => " Please Enter Employee Date Of Birth"}, :required =>true %> 
                     <span class="help-block with-errors"></span>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Department</label>                                              
										<div class="controls">
                     <%= f.collection_select :department_id, Department.all, :id, :department_name, { :prompt => "Please Select" }, { :class => "departments, span8 form-control", :id => "disabledSelect1" } %> 
                     <span class="help-block with-errors"></span>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Designation</label>                                              
										<div class="controls">
                     <%= f.grouped_collection_select :designation_id, Department.all, :designations, :department_name,  :id, :designation_name, { :prompt => "Please Select" }, { :class => "designation span8 form-control", :id=>"disabledSelect"  } %>  
                     <span class="help-block with-errors"></span>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Grade/Level</label>                                           
										<div class="controls">
                      <%= f.grouped_collection_select :grade_id, Designation.all, :grades, :designation_name,  :id, :value, { :prompt => "Please Select" }, { :class => "grades span8 form-control", :id=>"disabledSelect"  } %>
                     <span class="help-block with-errors"></span>
										</div>
									</div>
									
									<div class="control-group">
										<label class="control-label" for="basicinput">Upload Image</label>                                         
										<div class="controls">
                      <%= f.file_field :avatar,:onchange =>"validateFiles(this);",:data => {:max_file_size => 5.megabytes}%>
                     <span class="help-block with-errors"></span>
										</div>
									</div>

		
												 <button type="submit" class="btn btn-success">Save & Continue</button><br>
											
										<% end %>
							</div><!--/.module-body-->
						</div><!--/.module-->
					</div><!--/.content-->
				</div><!--/.span12-->
			</div><!--/.row-->
		</div><!--/.container-->
	</div><!--/.wrapper-->


						
						
					

<script>
//Date Picker


//Department and designation dynamic select buttons
 
  $('.designation').parent().hide();
  var designations = $('.designation').html();
  $('#disabledSelect1').change(function() {
   var department = $('#disabledSelect1 :selected').text();
   var  options = $(designations).filter("optgroup[label='"+department+"']").html();
    if (options) {
      $('.designation').html(options);
      $('.designation').parent().show();
       
      }
    else {
      $('.designation').empty();
      $('.designation').parent().hide();
      }
    var grades =  $('.grades').html();
   var designation = $('.designation :selected').text();
     var gradeoptions = $(grades).filter("optgroup[label='"+designation+"']").html();
      if (gradeoptions) {
      $('.grades').html(gradeoptions);
      $('.grades').parent().show();
      }
    else {
      $('.grades').empty();
      $('.grades').parent().hide();
      }
  });
   
  //Designation and grades dynamic select buttons
  $('.grades').parent().hide();
    var grades =  $('.grades').html();
    $('.designation').click(function() {
     var designation = $('.designation :selected').text();
     var gradeoptions = $(grades).filter("optgroup[label='"+designation+"']").html();
      if (gradeoptions) {
      $('.grades').html(gradeoptions);
      $('.grades').parent().show();
      }
    else {
      $('.grades').empty();
      //$('.grades').parent().hide();
      }
    });
 </script>

  <script>
  $(function() {
  var availableTags = [];
  $.get( "/getAllEmployees.json", function( data ) {
      $.each( data, function( key, val ) {
       availableTags.push(val);
       //alert(val["id"]+" - "+val["value"]);
      });
  });
  
       $( "#reporting" ).autocomplete({
        minLength: 0,
        source: availableTags,
        focus: function( event, ui ) {
        $( "#reporting" ).val( ui.item.value );
        return false;
        },
        select: function( event, ui ) {
        $( "#reporting" ).val( ui.item.value );
        $( "#reporting_id" ).val( ui.item.id );
        return false;
        }
        })
  });
  </script>
    
    <!-- script for image uploading-->
    
      <script>
function validateFiles(inputFile) {
  var maxExceededMessage = "This file exceeds the maximum allowed file size (5 MB)";
  var extErrorMessage = "Only image file with extension: .jpg, .jpeg, .gif or .png is allowed";
  var allowedExtension = ["jpg", "jpeg", "gif", "png", "JPG", "PNG", "JPEG", "GIF"];
  
  var extName;
  var maxFileSize = $(inputFile).data('max-file-size');
  var sizeExceeded = false;
  var extError = false;
  
  $.each(inputFile.files, function() {
    if (this.size && maxFileSize && this.size > parseInt(maxFileSize)) {sizeExceeded=true;};
    extName = this.name.split('.').pop();
    if ($.inArray(extName, allowedExtension) == -1) {extError=true;};
  });
  if (sizeExceeded) {
    window.alert(maxExceededMessage);
    $(inputFile).val('');
  };
  
  if (extError) {
    window.alert(extErrorMessage);
    $(inputFile).val('');
  };
}
</script>


